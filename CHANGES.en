
- Integrated new Decision Deck XMCDA web-services:

  ITTB: 22 new WS by Dhouha Kbaier, Télécom Bretagne
    - alternativesRankingViaQualificationDistillation
    - computeNumericPerformanceTable
    - criteriaDescriptiveStatistics
    - cutRelation
    - performanceTableFilter
    - performanceTableTransformation
    - plotAlternativesAffectations
    - plotAlternativesAssignments
    - plotAlternativesComparisons
    - plotAlternativesValuesPreorder
    - plotAlternativesValues
    - plotCriteriaComparisons
    - plotCriteriaValuesPreorder
    - plotCriteriaValues
    - plotFuzzyCategoriesValues
    - plotNumericPerformanceTable
    - plotStarGraphPerformanceTable
    - plotValueFunctions
    - sortAlternativesValues
    - transitiveReductionAlternativesComparisons
    - transitiveReductionCriteriaComparisons
    - UTA

  ws-Mcc: 5 new WS by Alexandru Olteanu,
                      Université du Luxembourg / Télécom Bretagne
    - mccClustersRelationSummary
    - mccClusters
    - mccEvaluateClusters
    - mccPlotClusters
    - mccPreferenceRelation

  PyXMCDA: 2 new WS by Sébastien Bigaret, Télécom Bretagne
    - csvToXMCDA-categoriesProfiles
    - csvToXMCDA-valueFunctions

  PyXMCDA MccP has been removed (replaced by the programs supplied by ws-Mcc)


diviz v1.8.2
------------

- prg_generic: this service, which allows to execute programs locally on the
  user's computer, now proposes up to 10 possible inputs and 10 possible
  outputs (instead of 5, formerly).

- Fixed a bug that happened under special circumstances, where diviz clients
  running on Windows could not mix call to remote web-services withh call to
  local programs.


diviz v1.8.1
------------

- It is now possible to give your own, custom names to the results; it should
  make it simpler to retrieve a known result which has been appropriately
  named.  When a custom name is given to a result, it replaces the execution
  date in the workflow executions' tree. The execution time is however still
  accessible as a tooltip.

- Integrated new Decision Deck XMCDA webservices:

  - (PyXMCDA) csvToXMCDA-alternativesValues v1.0
  - (PyXMCDA) csvToXMCDA-performanceTable v1.0, replaces the J-MCDA version
    (this version accepts more csv formats)

diviz v1.8
----------

- A new search field appeared at the top the the tree of programs.  Programs
  matching the searched string are highlighted by being displayed using a bold
  font.

- In addition, the hierarchy of programs has changed, we hope it makes it even
  easier to select / find a program. Programs are now sorted according to
  value and outranking techniques, and general tools for MCDA. Each of these
  categories contains several sub-categories, which should allow to
  reconstruct MCDA methods more easily. For example, the outranking techniques
  are composed of parameter elicitation algorithms, relation construction
  methods, relation exploitation techniques and sensitivity analysis tools.

- The following web-services, developed and proposed during the Decision Deck
  Developers' Camp '2011 have been integrated into diviz:

  - ULOWA (URV) poposed by Aida Valls, Lucas Marin and Jordi Canals
  - RubisOutrankingRelation (PyXMCDA) by Thomas Veneziano
  - MccP (PyXMCDA) by Alexandru Olteanu
  - multipleAlternativesValuesKendall (RXMCDA) by Patrick  Meyer
  - csvToXMCDA-criteriaValues by Sébastien Bigaret

  Updated:

  - ElectreTriBMInference v1.1 by Olivier S.: fixed categories' rank problem:
    the preferred category is ranked first.

  Plus the two new following services proposed just after the DD Dev.Camp:
  - csvToXMCDA-criteriaThresholds (PyXMCDA) by Sébastien Bigaret
  - stableSorting (PyXMCDA) by Thomas Veneziano

diviz v1.7.4
------------

- Fixed a situation where the client could never connect to the server,
  depending on the network configuration and the surrounding firewalls.


diviz v1.7.3
------------

- When using java 7, the HTML result's viewer was not available (only the raw
  XMCDA format could be viewed): this has been fixed.


diviz v1.7.2
------------

In certain cases related to the network configuration of the user's computer,
diviz could not be used at all: all web-services were marked as unknown,
displayed in red.

We particularly thank Sascha Graßhoff for reporting the problem and for
working with us to solve it.


diviz v1.7.1
------------

v1.7 was executing the web-services in their testing environment.
This release does not require that the diviz client is updated.


diviz v1.7
----------

Please note!

    The limitation introduced in 1.6, preventing offline executions, has been
    removed: it is again possible to execute workflows offline.

	When a workflow is executed, all programs that can be executed remotely
	are directly sent to the server, so that one can quit diviz just after
	executing a workflow and come back later for the results.  It should be
	noted that workflows containing one or more programs to be locally
	executed, will resume their execution (at the point where the local
	program is to be executed) when diviz is launched again.

- Exchanger XML Editor has been added to the list of xml viewers
  (executable xngr-editor must appear in the system's path)

- randomCriteria (PyXMCDA): all options are now disabled by default.

- prg_generic: lots of changes for this program which has been renamed to
  "generic_program" (existing workflows will be automatically adapted).

  Infiles and outfiles no longer have the extension '.xml'.  This makes it
  clearer that any type of file can be supplied or produced by such local
  script, not only xml.

  NOTE: it means that existing local scripts should be adapted so that the
        inputs and outputs do not have the extension '.xml' (e.g. 'outfile1'
        instead of 'outfile1.xml').

  It is now allowed to have zero inputs (the minimum was previously set to 1).

  The script can be supplied as an additional input file --this makes it
  easier to share a workflow with a local script without having to copy/paste
  it into the parameters' box, since exporting a workflow with its input files
  will then automatically include the script in the exported workflow.

- The text area in the parameter's dialog of "generic_program", in which one
  can write the script to be executed, now adapts its width to the dialog's
  width when it is resized.

- Changes in the XMCDA web-services that are reflected in diviz:

  - J-MCDA webservices by Olivier Cailloux: v0.5.1 is now integrated; a new
    service is available: csvToXMCDA-performanceTable;

  - PyXMCDA by Thomas Veneziano and Olivier Sobrie: all webservices now accept
    XMCDA v2.1 in addition to v2.0.


diviz v1.6.1
------------

- Parameters' dialog now displays all parameter's fields.  There were
  some situations where some parameters were only partially displayed
  or not displayed at all --this happened for program 'prg_generic',
  when the text area used by parameter 'script' was activated.

- The fields shown in the parameter's dialog are now resized if the
  dialog's width is changed.

  We also changed the dialog's scroll increment value so that the
  mouse wheel scrolls more quickly than just one pixel after the
  other!


diviz v1.6
----------

Please note!
    In this version, it is NOT possible to continue the execution of a
    workflow after diviz exits.  While this is an important issue, we
    decided that it was worth releasing diviz with the new ability to
    execute local scripts.  Of course, we are working on solving the
    problem.

    Should you really need to execute long jobs offline, please contact
    us and we will provide an alternate version where this is possible
    (but where execution of local programs is disabled).


- It is now possible to execute local scripts and programs, using the
  new program 'prg_generic'.

  Tutorials can be found here:
    http://www.diviz.org/tutorial.localProgram.html
    http://www.diviz.org/tutorial.localRScript.html


- New interactions in the results' views:

  - items (programs, links and files) can be selected ; since links can
    be selected, it makes it easier to see to which files or
    prog. inputs/outputs a program is connected to.

  - items in results (programs, links and files) can now be copied and
    pasted in any workflows.

    When pasting inputs that were copied from a result, the user is first
    asked for a directory where the corresponding files should be copied into.

  - Paste and delete actions are disabled.


- Added new XMCDA web-services recently introduced into the set of
  Decision Deck webservices:

  - (PyXMCDA) ElectreTriBMInference by Olivier Sobrie
  - (PyXMCDA) thresholdsSensitivityAnalysis by Thomas Veneziano
  - (URV) OWA by Jordi Canals & Aida Valls


- Services updated:

  PyXMCDA: randomCriteria v1.1 and randomPerformanceTable v1.1
           by Thomas Veneziano

  UTAR: ACUTA v2.0 and UTASTAR v1.1 by Boris Leistedt


- Execution views don't flicker anymore when updating the prgs' status


diviz v1.5
----------

- The way results are organized has changed.  The files produced by every
  program are now put in a dedicated directory, one per program.  Moreover,
  output files are not renamed to cryptic names anymore: the original file
  names are kept (e.g.: 'alternatives.xml').  This makes it possible to open
  them with the right default viewer.

  diviz is of course still compatible with the former results.

- The contextual menu associated to the results' panel now puts the input
  files in a dedicated sub-menu ('Input files').

  Reminder: this popup menu is shown when right-clicking on the results' tab
  bar.

- Added 2 new XMCDA web-services recently added to the set of XMCDA
  webservices by Patrick Meyer:

    - alternativesRankingViaQualificationDistillation
    - computeAlternativesQualification

  (in package RXMCDA)

- PyXMCDA randomAlternatives: it is no longer possible to select parameters
  'nbAlternatives' and 'alternativesNames' simultaneously (this is only a
  matter of graphical interface: in the service, the second parameter
  superseeds the first one).

- Minor bugs fixed in the XSL used to display resullts, thanks to Thomas
  Veneziano.

- Bug fix: a deleted workflow was not correctly unregistered.  After deleting
  a workflow, it was still being displayed in the list of workflows that could
  be opened, until diviz was restarted.

diviz v1.4.1
------------

- The images produced by some programs (plot...) were not displayed at all in
  the results' panel on Windows OSes (but they were correctly displayed in an
  external browser).  This has been fixed.

- When the result of an execution is selected, all its results files were
  consistently opened; this is not the case anymore.  A preference has been
  added, deciding whether all files should be automatically opened and
  displayed when a result is selected. The default is not to open them.


diviz v1.4
----------

- Fixed a possible freeze of the application on Windows platforms, when the
  user requested the deletion of a workflow.

- UTAR-UTASTAR: the program was incorrectly displaying a input (file)
  parameter named 'method', instead of proposing the choice of the
  post-optimality method in the parameters' setup dialog only.  This was a
  diviz problem only, there is no impact on the associated XMCDA web-service.

- diviz can be closed while an execution is running; the execution continues
  on the server, and its results will be sent back to the client when it
  connects (either updates on the progress of the execution, or the results if
  it is finished).

- Bug fix: closing a workflow sometimes left it displayed in the tree of
  opened workflows, but that entry was not responsive (and the workflow could
  not be opened again).  This happened when an execution result was selected,
  and it has been fixed.

- Bug fix: when executing a workflow, if one changed the view to display an
  other execution, or the workflow itself, the progress of the current
  execution was still being displayed and updated.  Now the view is updated if
  and only if the running execution is selected and displayed, as expected.

- A double-click on a result file in the workflow panel now opens the system's
  default viewer for this file.

- In some cases, diviz was stopping to work after a moment, claiming that too
  much opened files were opened.  This has been fixed.

- a new command-line is available, for launching the execution of workflows
  without having to use the graphical user interface:

  DVZ_CMD="java -Djava.util.logging.config.file= -Done-jar.main.class=eu.telecom_bretagne.praxis.client.SimpleCommandLine -jar ./build/diviz-client.jar"

  Executing a workflow:
  $DVZ_CMD /path/to/diviz/workspace/weightedSum/current/weightedSum.dvz

  For details on the available options: $DVZ_CMD -h
  Note:
  - The command-line can substitute the workflow's input files with others
    before execution
  - Option '-v' triggers verbose logging.

- Not every mouse has a wheel (some trackpads or trackballs e.g.): as an
  alternative to using Ctrl+mouse wheel, it is now possible to zoom in & to
  zoom out the workflow by pressing Ctrl-+ and Ctrl-- (one may need to click
  on the area displaying the workflow before)


diviz v1.3
----------

- 9 new services added, following the changes in the set of
  XMCDA Web-Services proposed by the Decision Deck consortium:

    J-MCDA: 2 new services
      - PrometheeProfiles
      - ElectreTriExploitation

    PyXMCDA: 4 new services
      - CondorcetRobustnessRelation
      - randomAlternatives
      - randomCriteria
      - randomPerformanceTable

    RXMCDA: 2 new services
      - plotGaiaPlane
      - Promethee1Ranking

    UTAR:
      - UTASTAR

- Network latencies are now handled much better.  Most disconnection
  problems that have been reported to us are now resolved.


diviz v1.2
----------

- diviz is now officially released under the CeCill v2 license!
  Sources are available at http://github.com/sbigaret/diviz

  The praxis framework, on which diviz is based, is also released
  under the same licence (http://github.com/sbigaret/Praxis).

- All XMCDA web-services have been renamed. Existing workflows are
  automatically adapted when they are loaded into diviz.

- Services added and removed, following the changes in the set of
  XMCDA Web-Services proposed by the Decision Deck consortium

    CppXMCDA: 3 new services
      - inconsistencyResolution
      - IRIS
      - IRIS-testInconsistency
  
    J-MCDA: 6 new services
      - cutRelation
      - ElectreConcordance
      - ElectreDiscordances
      - ElectreOutranking
      - PrometheeFlows
      - PrometheePreference
  
  
    RXMCDA: 4 new services
      - randomAlternativesRanks
      - randomCriteriaWeights
      - randomNormalizedPerformanceTable
      - additiveValueFunctionsIdentification-RXMCDA
      - convertAlternativesRanksToAlternativesComparisons-RXMCDA
      - invertAlternativesRanks-RXMCDA

    PyXMCDA: 1 service removed
      - weightsFromCondorcetRelation: it was redundant w/
        weightsFromCondorcetAndPreferences.

- A button is added to open a result in a web browser

- When creating a new file, the file selector now remembers the last
  directory in which a file was picked up.

- It is now possible to create a file when it does not exists.
  When a file in a worflow points to a valid path and the
  corresponding file does not exist, the popup menu gives the user the
  possibility to create the file. The created file is an empty, valid
  XMCDA file.

- A contextual sub-menu is added for launching viewers/editors on files.
  It allows users to open the files in a workflow when designing a
  workflow, with the very same viewers as those available for viewing
  the results.

  Combined with the above new feature (creation of empty XMCDA files),
  this makes it possible to create and edit files on the fly, when
  building workflows.

- The launcher now detects when the JVM used is not Sun's, and reports
  it.  People using an alternate java virtual machine (such as
  openjdk) are now warned that doing this may seriously degrade their
  experience with diviz.
  For more details, see http://github.com/sbigaret/Praxis/commit/afb7f972
  
- diviz now starts quicker when its workspaces contains a lot of
  workflows and results.
  Pre-read of workflows and results optimized: as a result, examining
  the whole workspace is now about 3 times faster than in previous
  versions.

- Bug fix: it was not possible to execute a workflow where a single
  file (or a single output) was connected to multiple inputs of the
  same program.


diviz v1.1
----------

Initial release.
