diviz v1.7.1
------------

La version v1.7 exécutait les web-services dans leur environnement de
test.  Cette version ne nécessite pas que le client diviz soit mis à
jour.


diviz v1.7
----------

Note importante!

  La limitation apparue dans la v1.6 qui empêchait les exécutions après que le
  client est fermé, est désormais levée: il est à nouveau possible de quitter
  diviz après avoir lancé une exécution.

  Quand un workflow est exécuté, tous les programmes qui peuvent être exécutés
  à distance sont directement envoyés au serveur, de façon à ce que l'on
  puisse quitter diviz juste après le lancement de l'exécution, et le relancer
  plus tard pour récupérer les résultats.  Il est à noter que, si le workflow
  contient un ou plusieurs programmes qui doit être exécuté localement, son
  exécution sera suspendu à l'endroit où ces programmes locaux apparaissent,
  jusqu'à ce que diviz soit relancé.

- Exchanger XML Editor a été ajouté à la liste des visualisateurs xml
  (l'exécutable xngr-editor doit apparaître dans le "path" système)

- randomCriteria (PyXMCDA): toutes ses options sont désormais désactivées par
  défaut.

- prg_generic: beaucoup de changements pour ce programme qui a été renommé
  "generic_program" (les workflows existants sont automatiquement adaptés)

  Les fichiers d'entrées et de sorties n'ont plus l'extension '.xml', de façon
  à mettre en évidence le fait que tout type de fichier peut être en entrée ou
  en sortie, et non uniquement des fichiers au format xml.

  NOTE: cela signifie que les scripts locaux existants doivent être adaptés,
        de façon à ce que les entrées et les sorties n'aient plus l'extension
        '.xml' ('outfile1.xml' devient 'outfile1', p.ex.).

  Il peut n'avoir aucune (zéro) entrée (le minimum était précédemment de 1)

  Le script peut être ajouté en tant que fichier d'entrée --cela permet de
  partager plus facilement des workflows qui utilisent un script local sans
  avoir à copier/coller son contenu dans la boîte de paramétrage, dans la
  mesure où l'export d'un workflow avec ses fichiers d'entrées incluera
  alors automatiquement le script.

- La zone de texte dans la fenêtre de paramétrage de «generic_program», dans
  laquelle on peut saisir le code du script, adapte sa largeur lorsqu'on
  redimensionne la fenêtre de dialogue.

- Changements intervenus dans les web-services XMCDA, reflétés par la
  configuration actuelle de diviz:

  - services J-MCDA par Olivier Cailloux: la version 0.5.1 est désormais
    intégrée; un nouveau service est apparu: csvToXMCDA-performanceTable;

  - services PyXMCDA par Thomas Veneziano et Olivier Sobrie: tous les
    webservices acceptent maintenant XMCDA v2.1 en plus de la v2.0.


diviz v1.6.1
------------

- La fenêtre de paramétrage affiche maintenant tous les champs de
  paramètres.  Il y avait quelques cas où certains paramètres
  pouvaient n'être qu'affichés que partiellement (ou pas du tout)
  --cela arrivait dans le programme 'prg_generic', lorsque la zone de
  texte du paramètre 'script'était activé.

- Les champs affichés dans la fenêtre de paramétrage grandissent
  maintenant avec la fenêtre.

  Le molette permet maintenant de scroller plus rapidement, plutôt que
  pixel par pixel!


diviz v1.6
----------

Note importante!
    Dans cette version, il n'est plus possible d'exécuter des workflows
    après que le client est fermé.  Bien que ce soit un problème
    important, nous avons pensé que la nouvelle fonctionnalité
    d'exécution des programmes locaux valait le coup d'être distribuée.
    Bien entendu, nous travaillons à résoudre ce problème.

    Cependant si vous avez besoin d'exécuter des traitements longs,
    veuillez nous contacter et nous vous fournirons une version qui le
    permet (mais dans laquelle l'exécution de programmes locaux est
    désactivée).

- Il est maintenant possible d'exécuter des scripts ou des programmes
  locaux, en utilisant le nouveau program «prg_generic».

  Deux exemples d'utilisation sont disponibles sur:
    http://www.diviz.org/tutorial.localProgram.html
    http://www.diviz.org/tutorial.localRScript.html


- Nouvelles interactions dans la fenêtre de résultats:

  - tous les éléments (programmes, liens et fichiers) peuvent être
    sélectionnés; la sélection des liens permet plus facilement de voir
    quels fichiers ou programmes sont reliés entre eux.

  - Les éléments résultats peuvent désormais être copiés/collés dans
    n'importe quel workflow.

    Lorsqu'un fichier d'entrée provenant d'un résultat est collé, il est
    copié dans le répertoire préalablement spécifié par l'utilisateur.


- Ajout des web-services XMCDA ajoutés récemment aux services Decision
  Deck:

  - (PyXMCDA) ElectreTriBMInference par Olivier Sobrie
  - (PyXMCDA) thresholdsSensitivityAnalysis par Thomas Veneziano
  - (URV) OWA par Jordi Canals & Aida Valls


- Mise à jour des services:

  PyXMCDA: randomCriteria v1.1 et randomPerformanceTable v1.1
           par Thomas Veneziano

  UTAR: ACUTA v2.0 et UTASTAR v1.1 par Boris Leistedt


- La vue d'exécution ne clignote plus quand l'état des programmes est
  mis à jour.


diviz v1.5
----------

- L'organisation des résultats a changé: les fichiers produits par chaque
  programme sont maintenant placés dans un répertoire dédié, un par programme.
  De plus, les fichiers de sortie ne sont plus renommés: ils conservent le nom
  que le programme leur ont donné (ex.: 'alternatives.xml).  Du coup il
  devient possible de les ouvrir avec le visualisateur par défaut adéquat.

  diviz reste bien sûr compatible avec les anciens résultats.

- Le menu contextuel associé au panneau de résultats place désormais les
  fichiers d'entrée dans un sous-menu dédié ("Fichiers d'entrée").

  Rappel: ce menu contextuel s'affiche avec un clic droit sur la barre des
  onglets du panneau des résultats.

- Ajout de 2 nouveaux services récemment ajoutés à l'ensemble des webservices
  XMCDA par Patrick Meyer:

    - alternativesRankingViaQualificationDistillation
    - computeAlternativesQualification

  (paquetage RXMCDA)

- PyXMCDA randomAlternatives: il n'est plus possible de sélectionner
  simultanément les paramètres 'nbAlternatives' et 'alternativesNames' (c'est
  uniquement un changement dans l'interface graphique: dans le service le
  second paramètre supplante le premier).

- Corrections de bugs mineurs dans le XSL de présentation des résultats, merci
  à Thomas Veneziano.

- Correction de bug: un workflow effacé n'était pas correctement déréférencé.
  Après avoir effacé un workflow, celui-ci restait affiché dans la liste des
  workflows pouvant être ouverts, jusqu'à ce que diviz soit redémarré.

diviz v1.4.1
------------

- Les images produites par certains programmes (plot...) n'étaient pas
  affichées dans le panneau de visualisation des résultats (elles
  apparaissaient correctement lorsque le fichier était visualisé dans un
  navigateur externe). Cela a été corrigé.

- Quand le résultat d'une exécution est sélectionné, tous les fichiers étaient
  ouverts systématiquement; ce n'est plus le cas désormais.  Une nouvelle
  préférence a été ajoutée, permettant de déterminer si tous les fichiers
  contenus dans les résultats d'une exécution doivent être ouverts et affichés
  automatiquement.  Désormais et par défaut, aucun n'est ouvert.

diviz v1.4
----------

- Correction d'un cas sous Windows où l'application pouvait se figer lorsque
  l'utilisateur demandait la suppression d'un workflow.

- UTAR-UTASTAR: le programm affichait une entrée fichier 'method' qui n'avait
  pas de sens, au lieu de ne proposer le choix de la méthode de
  post-optimalité que dans la fenêtre de paramétrage. Il s'agissait d'un
  problème relatif à diviz uniquement, le web-service associé n'est pas en
  cause.

- diviz peut désormais être fermé pendant qu'une exécution tourne; l'exécution
  continue sur le serveur et les résulats sont renvoyés au client dès qu'il se
  reconnecte (soit les résultats complets si l'exécution est erminée, soit son
  degré d'avancement).

- Correction de bug: après la fermeture d'un workflow, il restait parfois
  affiché dans l'arbre des workflows ouverts, sans qu'on puisse interagir avec
  (ni réouvrir le workflow). Cela arrivait lorsqu'un résultat d'exécution
  était sélectionné, et cela a été corrigé.

- Correction de bug: lors de l'exécution d'un workflow, si l'on sélectionnait
  une autre exécution ou le wrokflow lui-même, l'état d'avancement de
  l'exécution en cours était toujours affiché et mis à jour.  La vue n'est
  maintenant mis à jour que si l'exécution correspondante est sélectionnée et
  affichée.

- Un double clic sur un fichier de résultat permet de l'ouvrir avec le
  visualisateur par défaut.

- Dans certains cas, diviz s'arrêtait de fonctionner après un moment, la
  raison donnée était que trop de fichiers étaient ouverts (Too much open
  files).  Cela a été corrigé.

- Une nouvelle commande en ligne est disponible, qui permet d'exécuter des
  workflows sans avoir à lancer l'interface graphique:

  DVZ_CMD="java -Djava.util.logging.config.file= -Done-jar.main.class=eu.telecom_bretagne.praxis.client.SimpleCommandLine -jar ./build/diviz-client.jar"

  Exécution d'un workflow:
  $DVZ_CMD /chemin/du/diviz_workspace/weightedSum/current/weightedSum.dvz

  Pour plus de détails sur les options disponibles:: $DVZ_CMD -h
  À noter:
  - les fichiers d'entrées déclarés dans le workflow peuvent être changés
    avant exécution via cette commande en ligne;
  - l'option '-v' permet un affichage plus verbeux.

- Toutes les souris n'ont pas de molette (certains "trackpads" ou "trackballs"
  p.ex.): en complément de Ctrl+molette pour zoomer sur un workflow, il est
  désormais possible d'utiliser Ctrl-+ et Ctrl-- (il peut être nécessaire de
  cliquer sur le panneau d'affichage du workflow pour que cela fonctionne).

diviz v1.3
----------

- 9 nouveaux services ont été ajoutés, suivant les changements qui ont
  été faits dans l'ensemble des web-services XMCDA proposés par le
  consortium Decision Deck:

    J-MCDA: 2 nouveaux services
      - PrometheeProfiles
      - ElectreTriExploitation

    PyXMCDA: 4 nouveaux services
      - CondorcetRobustnessRelation
      - randomAlternatives
      - randomCriteria
      - randomPerformanceTable

    RXMCDA: 2 nouveaux services
      - plotGaiaPlane
      - Promethee1Ranking

    UTAR:
      - UTASTAR

- Les latences réseau sont désormais mieux gérées, ce qui élimine la
  plupart des problèmes de déconnexion qui ont été signalés.


diviz v1.2
----------

- diviz est désormais officiellement distribué sous la licence CeCill
  v2!
  Les sources sont disponibles sur: http://github.com/sbigaret/diviz

  Le framework Praxis, sur lequel diviz est contruit, est aussi
  distribué sous le même licence (http://github.com/sbigaret/Praxis).

- Tous les web-services XMCDA ont été renommés. Les workflows
  existants sont automatiquement adaptés lorsqu'ils sont ouverts dans
  diviz.

- Des services ont été ajoutés et enlevés, suivant les changements qui
  ont été faits dans l'ensemble des web-services XMCDA proposés par le
  consortium Decision Deck

    CppXMCDA: 3 nouveaux services
      - inconsistencyResolution
      - IRIS
      - IRIS-testInconsistency
  
    J-MCDA: 6 nouveaux services
      - cutRelation
      - ElectreConcordance
      - ElectreDiscordances
      - ElectreOutranking
      - PrometheeFlows
      - PrometheePreference
  
  
    RXMCDA: 4 nouveaux services
      - randomAlternativesRanks
      - randomCriteriaWeights
      - randomNormalizedPerformanceTable
      - additiveValueFunctionsIdentification-RXMCDA
      - convertAlternativesRanksToAlternativesComparisons-RXMCDA
      - invertAlternativesRanks-RXMCDA

    PyXMCDA: 1 service enlevé
      - weightsFromCondorcetRelation: il était redondant avec
        weightsFromCondorcetAndPreferences.

- Ajout d'un bouton permettant d'ouvrir un résultat dans un navigateur
  web.

- À la création d'un fichier, la fenêtre de sélection se rappelle du
  dernier répertoire où un fichier a été sélectionné.

- Il est désormais possible de créer un fichier quand il n'existe pas.
  Quand dans un workflow, un fichier pointe sur un chemin valide et
  que le fichier correspondant n'existe pas, le menu contectuel donne
  à l'utilisateur la possibilité de créer le fichier.  Le fichier créé
  est un fichier XMCDA valide, vide.

- Un menu contextuel a été ajouté pour ouvrir un éditeur sur un
  fichier.  Cela permet à l'utilisateur d'ouvrir les fichiers d'un
  workflow lorsqu'il est en train de le construire, avec le même
  ensemble d'éditeurs que celui qui est disponible pour les résultats.

  Combinée avec la fonctionnalité précédente (création d'un fichier
  XMCDA vide), cela permet de créer et d'éditer des fichiers à la
  volée, lors de la construction d'un workflow.

- L'application détecte maintenant les cas où la JVM utilisée n'est
  pas celle de Sun, et le signale.  Les personnes utilisant une
  machine virtuelle alternative (telle que openjdk) sont désormais
  prévenus que cela peut sérieusement dégrader le fonctionnement de
  diviz.  Pour plus de détails, voir:
  http://github.com/sbigaret/Praxis/commit/afb7f972

- diviz démarre maintenant plus rapidement lorsque l'espace de travail
  contient beaucoup de workflows et de résultats.
  La pré-lecture des workflows et des résultats a été optimisée:
  l'examen complet de l'espace de travail est désormais quelque 3 fois
  plus rapide que dans la version précédente.

- Correction de bug: il n'était pas possible d'exécuter un workflow
  quand un fichier (ou une entrée) était connectée à plusieurs entrées
  d'un même programme.


diviz v1.1
----------

Première distribution de diviz.
