diviz v1.5
----------

- L'organisation des résultats a changé: les fichiers produits par chaque
  programme sont maintenant placés dans un répertoire dédié, un par programme.
  De plus, les fichiers de sortie ne sont plus renommés: ils conservent le nom
  que le programme leur ont donné (ex.: 'alternatives.xml).  Du coup il
  devient possible de les ouvrir avec le visualisateur par défaut adéquat.

  diviz reste bien sûr compatible avec les anciens résultats.

- Le menu contextuel associé au panneau de résultats place désormais les
  fichiers d'entrée dans un sous-menu dédié ("Fichiers d'entrée").

  Rappel: ce menu contextuel s'affiche avec un clic droit sur la barre des
  onglets du panneau des résultats.

- Ajout de 2 nouveaux services récemment ajoutés à l'ensemble des webservices
  XMCDA par Patrick Meyer:

    - alternativesRankingViaQualificationDistillation
    - computeAlternativesQualification

  (paquetage RXMCDA)

- Corrections de bugs mineurs dans le XSL de présentation des résultats, merci
  à Thomas Veneziano.

- Correction de bug: un workflow effacé n'était pas correctement déréférencé.
  Après avoir effacé un workflow, celui-ci restait affiché dans la liste des
  workflows pouvant être ouverts, jusqu'à ce que diviz soit redémarré.

diviz v1.4.1
------------

- Les images produites par certains programmes (plot...) n'étaient pas
  affichées dans le panneau de visualisation des résultats (elles
  apparaissaient correctement lorsque le fichier était visualisé dans un
  navigateur externe). Cela a été corrigé.

- Quand le résultat d'une exécution est sélectionné, tous les fichiers étaient
  ouverts systématiquement; ce n'est plus le cas désormais.  Une nouvelle
  préférence a été ajoutée, permettant de déterminer si tous les fichiers
  contenus dans les résultats d'une exécution doivent être ouverts et affichés
  automatiquement.  Désormais et par défaut, aucun n'est ouvert.

diviz v1.4
----------

- Correction d'un cas sous Windows où l'application pouvait se figer lorsque
  l'utilisateur demandait la suppression d'un workflow.

- UTAR-UTASTAR: le programm affichait une entrée fichier 'method' qui n'avait
  pas de sens, au lieu de ne proposer le choix de la méthode de
  post-optimalité que dans la fenêtre de paramétrage. Il s'agissait d'un
  problème relatif à diviz uniquement, le web-service associé n'est pas en
  cause.

- diviz peut désormais être fermé pendant qu'une exécution tourne; l'exécution
  continue sur le serveur et les résulats sont renvoyés au client dès qu'il se
  reconnecte (soit les résultats complets si l'exécution est erminée, soit son
  degré d'avancement).

- Correction de bug: après la fermeture d'un workflow, il restait parfois
  affiché dans l'arbre des workflows ouverts, sans qu'on puisse interagir avec
  (ni réouvrir le workflow). Cela arrivait lorsqu'un résultat d'exécution
  était sélectionné, et cela a été corrigé.

- Correction de bug: lors de l'exécution d'un workflow, si l'on sélectionnait
  une autre exécution ou le wrokflow lui-même, l'état d'avancement de
  l'exécution en cours était toujours affiché et mis à jour.  La vue n'est
  maintenant mis à jour que si l'exécution correspondante est sélectionnée et
  affichée.

- Un double clic sur un fichier de résultat permet de l'ouvrir avec le
  visualisateur par défaut.

- Dans certains cas, diviz s'arrêtait de fonctionner après un moment, la
  raison donnée était que trop de fichiers étaient ouverts (Too much open
  files).  Cela a été corrigé.

- Une nouvelle commande en ligne est disponible, qui permet d'exécuter des
  workflows sans avoir à lancer l'interface graphique:

  DVZ_CMD="java -Djava.util.logging.config.file= -Done-jar.main.class=eu.telecom_bretagne.praxis.client.SimpleCommandLine -jar ./build/diviz-client.jar"

  Exécution d'un workflow:
  $DVZ_CMD /chemin/du/diviz_workspace/weightedSum/current/weightedSum.dvz

  Pour plus de détails sur les options disponibles:: $DVZ_CMD -h
  À noter:
  - les fichiers d'entrées déclarés dans le workflow peuvent être changés
    avant exécution via cette commande en ligne;
  - l'option '-v' permet un affichage plus verbeux.

- Toutes les souris n'ont pas de molette (certains "trackpads" ou "trackballs"
  p.ex.): en complément de Ctrl+molette pour zoomer sur un workflow, il est
  désormais possible d'utiliser Ctrl-+ et Ctrl-- (il peut être nécessaire de
  cliquer sur le panneau d'affichage du workflow pour que cela fonctionne).

diviz v1.3
----------

- 9 nouveaux services ont été ajoutés, suivant les changements qui ont
  été faits dans l'ensemble des web-services XMCDA proposés par le
  consortium Decision Deck:

    J-MCDA: 2 nouveaux services
      - PrometheeProfiles
      - ElectreTriExploitation

    PyXMCDA: 4 nouveaux services
      - CondorcetRobustnessRelation
      - randomAlternatives
      - randomCriteria
      - randomPerformanceTable

    RXMCDA: 2 nouveaux services
      - plotGaiaPlane
      - Promethee1Ranking

    UTAR:
      - UTASTAR

- Les latences réseau sont désormais mieux gérées, ce qui élimine la
  plupart des problèmes de déconnexion qui ont été signalés.


diviz v1.2
----------

- diviz est désormais officiellement distribué sous la licence CeCill
  v2!
  Les sources sont disponibles sur: http://github.com/sbigaret/diviz

  Le framework Praxis, sur lequel diviz est contruit, est aussi
  distribué sous le même licence (http://github.com/sbigaret/Praxis).

- Tous les web-services XMCDA ont été renommés. Les workflows
  existants sont automatiquement adaptés lorsqu'ils sont ouverts dans
  diviz.

- Des services ont été ajoutés et enlevés, suivant les changements qui
  ont été faits dans l'ensemble des web-services XMCDA proposés par le
  consortium Decision Deck

    CppXMCDA: 3 nouveaux services
      - inconsistencyResolution
      - IRIS
      - IRIS-testInconsistency
  
    J-MCDA: 6 nouveaux services
      - cutRelation
      - ElectreConcordance
      - ElectreDiscordances
      - ElectreOutranking
      - PrometheeFlows
      - PrometheePreference
  
  
    RXMCDA: 4 nouveaux services
      - randomAlternativesRanks
      - randomCriteriaWeights
      - randomNormalizedPerformanceTable
      - additiveValueFunctionsIdentification-RXMCDA
      - convertAlternativesRanksToAlternativesComparisons-RXMCDA
      - invertAlternativesRanks-RXMCDA

    PyXMCDA: 1 service enlevé
      - weightsFromCondorcetRelation: il était redondant avec
        weightsFromCondorcetAndPreferences.

- Ajout d'un bouton permettant d'ouvrir un résultat dans un navigateur
  web.

- À la création d'un fichier, la fenêtre de sélection se rappelle du
  dernier répertoire où un fichier a été sélectionné.

- Il est désormais possible de créer un fichier quand il n'existe pas.
  Quand dans un workflow, un fichier pointe sur un chemin valide et
  que le fichier correspondant n'existe pas, le menu contectuel donne
  à l'utilisateur la possibilité de créer le fichier.  Le fichier créé
  est un fichier XMCDA valide, vide.

- Un menu contextuel a été ajouté pour ouvrir un éditeur sur un
  fichier.  Cela permet à l'utilisateur d'ouvrir les fichiers d'un
  workflow lorsqu'il est en train de le construire, avec le même
  ensemble d'éditeurs que celui qui est disponible pour les résultats.

  Combinée avec la fonctionnalité précédente (création d'un fichier
  XMCDA vide), cela permet de créer et d'éditer des fichiers à la
  volée, lors de la construction d'un workflow.

- L'application détecte maintenant les cas où la JVM utilisée n'est
  pas celle de Sun, et le signale.  Les personnes utilisant une
  machine virtuelle alternative (telle que openjdk) sont désormais
  prévenus que cela peut sérieusement dégrader le fonctionnement de
  diviz.  Pour plus de détails, voir:
  http://github.com/sbigaret/Praxis/commit/afb7f972

- diviz démarre maintenant plus rapidement lorsque l'espace de travail
  contient beaucoup de workflows et de résultats.
  La pré-lecture des workflows et des résultats a été optimisée:
  l'examen complet de l'espace de travail est désormais quelque 3 fois
  plus rapide que dans la version précédente.

- Correction de bug: il n'était pas possible d'exécuter un workflow
  quand un fichier (ou une entrée) était connectée à plusieurs entrées
  d'un même programme.


diviz v1.1
----------

Première distribution de diviz.
